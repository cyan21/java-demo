pipelines:
  - name: backapp_mvn
    configuration:
      environmentVariables:
        readOnly:
          virtualRepo: urs-mvn
          skipScan: "true"
    steps:
      - name: build_backapp_mvn
        type: MvnBuild
        configuration:
          runtime:      
            type: image
            image:
              custom:
                name: platform-eu.stg.gcp.devopsacc.team/urs-docker/jfrog/pipelines-u18java
                tag: "14"
                registry: artifactory_docker
                sourceRepository: urs-docker
          environmentVariables:
            JFROG_CLI_BUILD_NAME: "{{ gitBranch }}_backapp_mvn"
            JFROG_CLI_BUILD_URL: "${step_url}${res_src_code_backapp_mvn_branchName}"
            JFROG_CLI_LOG_LEVEL: INFO
            M2_HOME: /usr/local/apache-maven-3.6.3/
          mvnCommand: clean package --no-transfer-progress
          sourceLocation: src
          resolverSnapshotRepo: ${virtualRepo}
          resolverReleaseRepo: ${virtualRepo}
          deployerSnapshotRepo: ${virtualRepo}
          deployerReleaseRepo: ${virtualRepo}
          forceXrayScan: false
          autoPublishBuildInfo: true
          inputResources:
            - name: src_code_backapp_mvn
          outputResources:
            - name: bi_backapp_mvn
          integrations:
            - name: artifactory_eu_https
            - name: artifactory_docker
        execution:
          onStart:
            - ls -l ${res_src_code_backapp_mvn_resourcePath}/src
            - jfrog rt c show
          onFailure:
            - echo "Not cool"
          onSuccess:
            - echo "Yahoo"
            - add_run_variables runVarAppVersion=`sed -n "s/[[:space:]]*<version>\(.*\)<\/version>/\1/p" ${res_src_code_backapp_mvn_resourcePath}/src/pom.xml`
            - echo $runVarAppVersion

      - name: scan_backapp_mvn
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: bi_backapp_mvn
              trigger: true
        execution:
          onStart:
            - if [ "${skipScan}" == "true" ]; then echo Skipping scan_backapp_mvn step; exit 0; fi
            
      - name: promote_bi_backapp_mvn_promoted
        type: PromoteBuild
        configuration:
          targetRepository: urs-mvn-rc-local
          includeDependencies: false
          status: SANDBOX_OK
          comment: Unit testing and Xray scan passed succesfully
          copy: false
          inputResources:
            - name: bi_backapp_mvn
              trigger: true
          inputSteps:
            - name: scan_backapp_mvn
              status:
                - success
                - failure
                - error
                - cancelled
                - skipped
          outputResources:
            - name: bi_backapp_mvn_promoted
            - name: pb_backapp_mvn
        execution:  
          onSuccess:
            - write_output pb_backapp_mvn appVersion=${runVarAppVersion}

  - name: backapp_mvn_docker
    configuration:
      environmentVariables:
        readOnly:
          registryFQDN: platform-eu.stg.gcp.devopsacc.team
          dockerRepoName: urs-docker
          skipScan: "true"
          pushRepo: urs-docker-dev-local
          promoteRepo: urs-docker-rc-local
    steps:
      # need this step to export the appVersion for the Filespec Resource
      - name: export_variables
        type: Bash
        configuration:
          inputResources:
            - name: pb_backapp_mvn
        execution:
          onExecute:
            - add_run_variables runVarAppVersion=${res_pb_backapp_mvn_appVersion}
            - echo $runVarAppVersion

      - name: build_backapp_mvn_docker
        type: DockerBuild
        configuration:
          environmentVariables:
          #   JFROG_CLI_BUILD_NAME: "{{ gitBranch }}_backapp_mvn_docker"
          #   JFROG_CLI_BUILD_URL: "${step_url}${res_src_code_backapp_mvn_branchName}"
            JFROG_CLI_LOG_LEVEL: DEBUG
          affinityGroup: together
          dockerFileName: Dockerfile
          dockerFileLocation: src
          dockerImageName: ${registryFQDN}/${dockerRepoName}/backapp-mvn-docker
          dockerImageTag: ${runVarAppVersion}
          dockerOptions: --build-arg REGISTRY=${registryFQDN} --build-arg DOCKER_REPO=${dockerRepoName}
          inputSteps:
            - name: export_variables
          inputResources:
            - name: src_dockerfile_backapp_mvn
            - name: fs_backapp_mvn
          integrations:
            - name: artifactory_eu_https
            - name: artifactory_docker
        execution:
          onStart:
            # - pwd && ls -l
            # - ls -l ../../ 
            - echo $runVarAppVersion
            - ls -la ${res_fs_backapp_mvn_resourcePath}
            - echo ${res_src_dockerfile_backapp_mvn_resourcePath}
            - ls -la  ${res_src_dockerfile_backapp_mvn_resourcePath}
            - >-
              cp
              ${res_fs_backapp_mvn_resourcePath}/multi-module-application-${runVarAppVersion}.jar
              ${res_src_dockerfile_backapp_mvn_resourcePath}/src/multi-module-application.jar

      - name: publish_backapp_mvn_docker
        type: DockerPush
        configuration:
          environmentVariables:
            JFROG_CLI_BUILD_NAME: "{{ gitBranch }}_backapp_mvn_docker"
            JFROG_CLI_BUILD_URL: "${step_url}{{ gitBranch }}"
            JFROG_CLI_LOG_LEVEL: INFO
          targetRepository: urs-docker-dev-local
          autoPublishBuildInfo: true
          inputSteps:
            - name: build_backapp_mvn_docker
          integrations:
            - name: artifactory_eu_https
          outputResources:
            - name: bi_backapp_mvn_docker
        execution:
          onSuccess:
            - >-
              jfrog rt sp
              --build=${res_bi_backapp_mvn_docker_buildName}/${run_number}
              ${pushRepo}/backapp-mvn-docker/${runVarAppVersion}/
              "app.version=${runVarAppVersion};app.commit.sha=${runVarAppCommitSHA};dockerfile.commit.sha=${runVarGitCommit};project.name=uranus"

      - name: scan_backapp_mvn_docker
        type: XrayScan
        configuration:
          failOnScan: false
          inputResources:
            - name: bi_backapp_mvn_docker
              trigger: true
        execution:
          onStart:
            - if [ "${skipScan}" == "true" ]; then echo Skipping scan_backapp_mvn_docker step; exit 0; fi
            
      # - name: promote_bi_backapp_mvn_docker
      #   type: PromoteBuild
      #   configuration:
      #     targetRepository: ${promoteRepo}
      #     includeDependencies: false
      #     status: SCAN_OK
      #     comment: Xray scan OK
      #     copy: false
      #     inputSteps:
      #       - name: scan_backapp_mvn_docker
      #     inputResources:
      #       - name: bi_backapp_mvn_docker
      #     outputResources:
      #       - name: bi_backapp_mvn_docker_promoted
